//ТГцУёџТюгућеС║јТћЙуй«ТЪљС║ЏтЁгуФІуџёСИюУЦ┐№╝ї
import funkin.backend.scripting.addons.AddonsManager;

public static var deadState:Bool;

public var camOther:FlxCamera;

public var cpuControlled:Bool = false;
public var cameraMovementChanged:Bool = false;

function new() {
	PauseSubState.script = "data/scripts/pause";
	camOther = new FlxCamera();
	camOther.bgColor = 0;
	
	FlxG.cameras.add(camOther, false);
	FlxG.mouse.visible = false;
}

/**
 * РађРађРађРађРађРађРађ РаЙРа┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐РаиРаё
 * РађРађРађРађРађРађ  Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐РаЄ
 * РађРађРађРађРађРађ Ра┐РаЏРаЅРаЅРаЅРа╗Ра┐Ра┐РаЪРаЅРаЅРаЅРаЏРа┐РаЄ
 * РађРађРађРађРађРађ Ра┐РађРађРаХРађРаИРа┐Ра┐РаЄ ­Ъїј   РаЄ
 * РађРађРађРађРађРађРађРа╗РаХРацРацРааРа┐РаЃРаўРа┐РаёРацРацРаХРаЪ
 * РађРађРађРађРађРађРађРаЙРа┐РаЎРаХРа┐Ра┐РацРацРа┐Ра┐РаХРаЈРа╗Раи
 * РађРађРађРађРађРађРађРа╗РаХРаюРа░РаГРаЕРаЇРаГРаЇРаГРа▒РааРаХРаЪ
 * РађРађРађРађРааРаХРадРаѕРа╗Ра┐РаХРаГРаўРаЃРаЏРаЃРаФРа┤Ра┐РаЪРаАРаЙРаЪРаѓ
 * РађРађРађРађРаіРаЅРаЏРа│РадРаѕРаЅРаЏРаЏРаЏРаЏРаЏРаЏРаЅРаЂРааРа┐РаІРађРа▒Раё
 * РађРађРађРаћРађРађРаёРађРаЅРа│РадРаёРа│РаХРаХРаЃРааРацРаъРаЏРаЂРааРаѓРађРаЎРаё
 * РађРађРајРађРађРађРаЄРађРађРаИРађРаЈРааРаГРаЇРаѕРаЈРаЄРађРађРађРа╝РађРађРађРаЎРає
 * РађРа╝РађРађРађРађРаиРаћРањРаџРаЇРаБРаИРа┐Ра┐РаИРаІРаЄРааРа┤РаџРа╣РађРађРађРађРа╗
 * РађРа╗РаёРађРађРа░РаЂРађРађРађРаЌРа╣РаИРа┐Ра┐РаИРаЅРаЄРаЄРађРађРаѕРаЄРађРађРађРаИ
 * РађРађРаЎРадРаёРаИРађРађРађРађРа▒Ра╣РаИРа┐Ра┐РаИРа╣РаюРађРађРађРађРаЄРађРађРа┤РаІ
 * РађРађРађРаѕРаЃРа╝РаХРаёРађРађРаИРаЙРаХРањРањРаџРаЙРацРацРацРацРаЙРаЃРаХРаіРаЂ
 * РађРађРађРађРађРађРаЅРаЅРаЅРаЅРаЂРађРађРађРађРађРађРађРађРађРађРаЅ
 * РађРађРађРађРађРађРаћРађРаХРађРађРађРађРађРађРађРађРаИРаЄРађРађРаБ
 * РађРађРађРађРађРађРаЄРаИРаЄРађРађРађРађРајРаєРађРађРаИРаДРађРађРаИ
 * РађРађРађРађРађРа░РаЂРаЙРаЂРађРађРађРааРаЄРа▒РађРађРаИРа┐РађРађРађРаЄ
 * РађРађРађРађРађРаИРађРа┐РађРађРађРађРаИРађРаИРађРађРађРа┐РађРађРађРаЄ
 * РађРађРађРађРађРаѕРаЅРаЅРањРањРањРањРаіРађРаѕРањРањРањРаЏРаЊРаіРаЅРаЂ
 * РађРађРађРађРааРаХРаХРацРа▓РаХРађРађРађРађРађРађРааРаиРаХРаХРаѓРацРаХРадРаё
 * РађРађРађРађРа┐Ра┐Ра┐Ра┐РаДРаЕРаёРађРађРађРађРађРагРаГРаГРа▒Ра┐Ра┐Ра┐Ра┐РаЪ№╗┐
 * ......
 * №╝ѕСйат░єС╝џТефт░ИжЂЇжЄј№╝Ѕ
 */
function onNextSong() {
	if(PlayState.isStoryMode) {
		if(PlayState.storyPlaylist.length < 1) {
			if(gameSaver.passedWeeks.contains(PlayState.storyWeek)) return;
			gameSaver.passedWeeks.push(PlayState.storyWeek);
			for(sb in PlayState.storyWeek.songs) 
				if(!gameSaver.passedSongs.contains(sb.name))
					gameSaver.passedSongs.push(sb.name);
			
			//СИЇУ┐ЎТаиТў»тГўСИЇС║єуџё№╝їтЏаСИ║Т▓АТюЅУхІтђ╝№╝їТЅђС╗ЦУ░ЃућеСИЇС║єset_passedWeeks
			gameSaver.passedWeeks = gameSaver.passedWeeks;
			gameSaver.passedSongs = gameSaver.passedSongs;
		}
	}else {
		if(gameSaver.passedSongs.contains(SONG.meta.name)) return;
		for(gs in gameSaver.passedWeeks) {
			if(gs.name == SONG.meta.name) {
				return;
			}
		}
		gameSaver.passedSongs.push(SONG.meta.name);
		
		gameSaver.passedSongs = gameSaver.passedSongs;
	}
	
	//ТхІУ»Ћуџё
	gameSaver.forTest = !gameSaver.forTest;
	gameSaver.save();
}

function onGameOver(event) {
	if(deadState == null || deadState == false)
		deadState = true;
	
	for(sb in FlxG.cameras.list) {
		if(sb._filters != null && sb._filters.length > 1)
			sb._filters = [];
	}
}

public function changeHealthBarColor(empty:FlxColor, filled:FlxColor) {
	if(healthBar == null) return;
	
	healthBar.createFilledBar(empty, filled);
	
	//уЎЙтѕєТ»ћТЏ┤Тќ░№╝їСИЇуёХУ┐ЎУЙѕтГљжЃйТюЅС║є
	healthBar.percent = health * 100 / 2;
}

function postUpdate(elapsed) {
	if(cameraMovementChanged)
		cameraMoveMentChanged = false;
}